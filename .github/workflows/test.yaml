# Adaptation of Node.js workflow template at https://github.com/actions/starter-workflows/blob/main/ci/node.js.yml
# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Chipcode tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  js-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: ['octopus', 'image-loader']
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
      working-directory: ${{ matrix.directory }}
    - run: npm test
      working-directory: ${{ matrix.directory }}

  octopus2-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: octopus2/go.sum
      - name: Run Go unit tests
        working-directory: ./octopus2
        run: make test
      - name: Build binaries
        working-directory: ./octopus2
        run: make linux
      - name: Run regression tests
        working-directory: ./octopus2
        run: make regression-test

  octopus2-build-linux-windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          version: '0.14.1'
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: octopus2/go.sum
      - name: Build binaries
        working-directory: ./octopus2
        run: |
          make linux
          make windows
      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: octopus-linux-amd64
          path: ./octopus2/dist/linux/*
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: octopus-windows-amd64
          path: ./octopus2/dist/windows/*

  octopus2-build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: octopus2/go.sum
      - name: Build binaries
        working-directory: ./octopus2
        run: make macos
      - name: Upload MacOS Intel binary
        uses: actions/upload-artifact@v4
        with:
          name: octopus-macos-intel
          path: ./octopus2/dist/macos-intel/*
      - name: Upload MacOS Apple Silicon binary
        uses: actions/upload-artifact@v4
        with:
          name: octopus-macos-apple-silicon
          path: ./octopus2/dist/macos-apple-silicon/*
