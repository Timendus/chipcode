# Include the font-header first, it contains the constants and macros needed to
# define and draw your strings
:const fontlib-str-end 0xFF
:const fontlib-str-newline 0xFE
:macro str-end { :byte fontlib-str-end }
:macro str-newline { :byte fontlib-str-newline }

:stringmode str "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,./:&'-!? " {
  :byte VALUE
}

:macro setFont label {
    :unpack long label
  fontlib-set-font
}

:macro drawText label X Y maxX maxY {
    :unpack long label
  v2 := X
  v3 := Y
  v4 := maxX
  v5 := maxY
  fontlib-draw-text
}

:macro drawTextWrapped label X Y maxX maxY {
    :unpack long label
  v2 := X
  v3 := Y
  v4 := maxX
  v5 := maxY
  fontlib-wrap-text
  v3 := Y
  fontlib-draw-text-leave-pointer
}


: main
  hires
  clear

  setFont font-5-pix-wide
  drawTextWrapped quote 14 10 114 64

  setFont font-4-pix-low
  drawText signature 40 47 118 64

  loop again

: quote
  str "I really should have included text rendering with custom fonts in the CHIP-8 instruction set from the start!" str-end
: signature
  str "-- Joseph Weisbecker" str-end

# Include the font library anywhere you like
:alias minX v2
:alias Ypos v3
:alias maxX v4
:alias maxY v5
:alias Xpos v6
:alias index v7
:alias temp v1

:const fontlib-soft-newline 0xFD
:const fontlib-space 71


# Inputs:
#   * v0 - v1  ->  0xANNN where NNN is pointer to string (or 0xNNNN for XO-CHIP)
#   * v2       ->  min X coordinate
#   * v3       ->  min Y coordinate
#   * v4       ->  max X coordinate
#   * v5       ->  max Y coordinate
# Destroys:
#   * v0, v1, v3, v6, v7
#   * i
: fontlib-wrap-text
  fontlib-unwrap-text  # Also saves pointer and fixes max coordinates
  index := 0
  Xpos := minX
: fontlib-wrap-text-loop
  fontlib-get-text-pointer
  # i now points to string
  if Ypos > maxY then return
  index += 1
  if index == 0 begin
    # Can't handle strings of more than 255 characters
    :breakpoint fontlib-wrap-text-cant-handle-strings-longer-than-255-chars
    return
  end
  load v0

  # Are we done?
  if v0 == fontlib-str-end then return

  # Is this a hard newline?
  if v0 == fontlib-str-newline begin
    fontlib-go-to-new-line
    jump fontlib-wrap-text-loop
  end

  # How wide is this character?
  fontlib-get-font-pointer  # i now points to font
  load v0 # Get font width in pixels

  # Will we go over maxX if we render this character?
  temp := Xpos
  temp += v0

  # All is well, just add to Xpos and move on
  if temp <= maxX begin
    Xpos += v0
    jump fontlib-wrap-text-loop
  end

  # We've overflowed maxX

  # Backtrack back up the string, find the first space
: -
  index -= 1
  if index == 255 begin  # Hit start of string, bail ("should never happen")
    :breakpoint fontlib-wrap-text-cant-wrap-this-string-badness-1
    return
  end
  fontlib-get-text-pointer
  load v0
  if v0 != fontlib-space begin
    # Subtract this character's width from Xpos,
    # backtracking through the pixels as well
    fontlib-get-font-pointer
    load v0
    Xpos -= v0
    if vF == 0 begin  # Subtracted too much, bail ("should never happen")
      :breakpoint fontlib-wrap-text-cant-wrap-this-string-badness-2
      return
    end
    jump -
  end

  # `index` now points to the previous space, replace with soft-newline
    fontlib-get-text-pointer
  v0 := fontlib-soft-newline
  save v0

  # And move on
  fontlib-go-to-new-line
  index += 1
  jump fontlib-wrap-text-loop

# Inputs:
#   * v0 - v1  ->  0xANNN where NNN is pointer to string (or 0xNNNN for XO-CHIP)
# Destroys:
#   * v0, v7
: fontlib-unwrap-text
  fontlib-save-text-pointer
  :next fontlib-fontheight-1
  maxY -= 0
  maxY += 1
  maxX += 2
  index := 0
: fontlib-unwrap-text-loop
  fontlib-get-text-pointer
  # i now points to string
  index += 1
   if index == 0 begin
    # Can't handle strings of more than 255 characters
    :breakpoint fontlib-unwrap-text-cant-handle-strings-longer-than-255-chars
    return
  end
  load v0
  if v0 == fontlib-str-end then return

  # The width may have changed, so do a fresh text wrap
  # If we encounter an existing soft-newline, revert it back to a space
  if v0 == fontlib-soft-newline begin
    index -= 1
      fontlib-get-text-pointer
    v0 := fontlib-space
    save v0
  end
  jump fontlib-unwrap-text-loop



# Inputs:
#   * v0 - v1  ->  0xANNN where NNN is pointer to font (or 0xNNNN for XO-CHIP)
# Destroys:
#   * v0, v1
: fontlib-set-font
  i := fontlib-set-font-smc
  save v1
  vF := 1
  v1 += vF
  v0 += vF
  # Store font address in the appropriate places
  i := fontlib-get-font-pointer-smc
  save v1
    0xF0 0x00
: fontlib-set-font-smc
  0x00 0x00
  load v0
  # Store font height in the appropriate places

  # Update this addition and setting of register
  i := fontlib-fontheight-4
  save v0
  i := fontlib-fontheight-5
  save v0

  # Update these subtractions
  v1 := v0
  v0 := 0
  v0 -= v1
    i := fontlib-fontheight-1
    save v0
  i := fontlib-fontheight-2
  save v0

  # Update sprite opcode
  i := fontlib-fontheight-3
  load v0
  vF := 0xF0
  v0 &= vF
  v0 |= v1
  i := fontlib-fontheight-3
  save v0
  return


# Inputs:
#   * v0 - v1  ->  0xANNN where NNN is pointer to string (or 0xNNNN for XO-CHIP)
#   * v2       ->  min X coordinate
#   * v3       ->  min Y coordinate
#   * v4       ->  max X coordinate
#   * v5       ->  max Y coordinate
# Destroys:
#   * v0, v1, v3, v6, v7
#   * i
: fontlib-draw-text
  fontlib-save-text-pointer
  :next fontlib-fontheight-2
  maxY -= 0
  maxY += 1
  maxX += 2
: fontlib-draw-text-leave-pointer
  index := 0
  Xpos := minX
: fontlib-draw-text-loop
  fontlib-get-text-pointer
  # i now points to string
  if Ypos > maxY then return
  index += 1
   if index == 0 begin
    # Can't handle strings of more than 255 characters
    :breakpoint fontlib-draw-text-cant-handle-strings-longer-than-255-chars
    return
  end
  load v0
  if v0 == fontlib-str-end then return
  if v0 == fontlib-str-newline begin
    fontlib-go-to-new-line
    jump fontlib-draw-text-loop
  end
  if v0 == fontlib-soft-newline begin
    fontlib-go-to-new-line
    jump fontlib-draw-text-loop
  end
  fontlib-get-font-pointer  # i now points to font
  load v0  # Get font width in pixels
  temp := Xpos
  temp += v0
  if temp > maxX begin
    fontlib-go-to-new-line
    if Ypos > maxY then return
  end
  :next fontlib-fontheight-3
  sprite Xpos Ypos 0
  Xpos += v0
  jump fontlib-draw-text-loop


: fontlib-go-to-new-line
  Xpos := minX
  :next fontlib-fontheight-4
  Ypos += 0
  Ypos += 1
  return

# v0 - v1 are unpacked string pointer
: fontlib-save-text-pointer
  i := fontlib-get-text-pointer-smc
  save v1
  return

# Get pointer to current character in `i`
: fontlib-get-text-pointer
    0xF0 0x00
: fontlib-get-text-pointer-smc
  0x00 0x00
  i += index
  return

# v0 is requested character
: fontlib-get-font-pointer
    0xF0 0x00
: fontlib-get-font-pointer-smc
  0x00 0x00
  i += v0
  :next fontlib-fontheight-5
  temp := 5
  loop
    i += v0
    temp -= 1
    if temp != 0 then
  again
  return


# Include the font data for the font(s) you want to use at the end if you use
# XO-CHIP (in the non-executable space). Or anywhere you like otherwise.

: font-5-pix-wide
  5
: 5-pix-wide-0-0
  0x05 0x60 0x90 0xf0 0x90 0x90
: 5-pix-wide-1-0
  0x05 0xe0 0x90 0xe0 0x90 0xe0
: 5-pix-wide-2-0
  0x05 0x70 0x80 0x80 0x80 0x70
: 5-pix-wide-3-0
  0x05 0xe0 0x90 0x90 0x90 0xe0
: 5-pix-wide-4-0
  0x05 0xf0 0x80 0xe0 0x80 0xf0
: 5-pix-wide-5-0
  0x05 0xf0 0x80 0xe0 0x80 0x80
: 5-pix-wide-6-0
  0x05 0x70 0x80 0xb0 0x90 0x70
: 5-pix-wide-7-0
  0x05 0x90 0x90 0xf0 0x90 0x90
: 5-pix-wide-8-0
  0x04 0xe0 0x40 0x40 0x40 0xe0
: 5-pix-wide-9-0
  0x04 0xe0 0x20 0x20 0x20 0xc0
: 5-pix-wide-10-0
  0x05 0x90 0xa0 0xc0 0xa0 0x90
: 5-pix-wide-11-0
  0x04 0x80 0x80 0x80 0x80 0xe0
: 5-pix-wide-12-0
  0x06 0xd0 0xa8 0xa8 0x88 0x88
: 5-pix-wide-13-0
  0x05 0x90 0xd0 0xb0 0x90 0x90
: 5-pix-wide-14-0
  0x05 0x60 0x90 0x90 0x90 0x60
: 5-pix-wide-15-0
  0x05 0xe0 0x90 0xe0 0x80 0x80
: 5-pix-wide-16-0
  0x05 0x60 0x90 0x90 0xb0 0x70
: 5-pix-wide-17-0
  0x05 0xe0 0x90 0xe0 0xa0 0x90
: 5-pix-wide-18-0
  0x05 0x70 0x80 0x60 0x10 0xe0
: 5-pix-wide-19-0
  0x04 0xe0 0x40 0x40 0x40 0x40
: 5-pix-wide-20-0
  0x05 0x90 0x90 0x90 0x90 0x70
: 5-pix-wide-21-0
  0x06 0x88 0x88 0x88 0x50 0x20
: 5-pix-wide-22-0
  0x06 0x88 0x88 0x88 0xa8 0x50
: 5-pix-wide-23-0
  0x06 0x88 0x50 0x20 0x50 0x88
: 5-pix-wide-24-0
  0x06 0x88 0x88 0x50 0x20 0x20
: 5-pix-wide-25-0
  0x05 0xf0 0x10 0x60 0x80 0xf0
: 5-pix-wide-26-0
  0x05 0x60 0x90 0x90 0x90 0x60
: 5-pix-wide-27-0
  0x04 0x40 0xc0 0x40 0x40 0xe0
: 5-pix-wide-28-0
  0x05 0xe0 0x10 0x60 0x80 0xf0
: 5-pix-wide-29-0
  0x05 0xe0 0x10 0x60 0x10 0xe0
: 5-pix-wide-30-0
  0x05 0x80 0x90 0xf0 0x10 0x10
: 5-pix-wide-31-0
  0x05 0xf0 0x80 0xe0 0x10 0xe0
: 5-pix-wide-32-0
  0x05 0x60 0x80 0xe0 0x90 0x60
: 5-pix-wide-33-0
  0x05 0xf0 0x10 0x20 0x40 0x40
: 5-pix-wide-34-0
  0x05 0x60 0x90 0x60 0x90 0x60
: 5-pix-wide-35-0
  0x05 0x60 0x90 0x70 0x10 0x60
: 5-pix-wide-0-1
  0x05 0x00 0x70 0x90 0x90 0x70
: 5-pix-wide-1-1
  0x05 0x80 0xe0 0x90 0x90 0xe0
: 5-pix-wide-2-1
  0x05 0x00 0x70 0x80 0x80 0x70
: 5-pix-wide-3-1
  0x05 0x10 0x70 0x90 0x90 0x70
: 5-pix-wide-4-1
  0x05 0x00 0x60 0x90 0xe0 0x70
: 5-pix-wide-5-1
  0x04 0x20 0x40 0xe0 0x40 0x40
: 5-pix-wide-6-1
  0x05 0x00 0x70 0x90 0x70 0xe0
: 5-pix-wide-7-1
  0x05 0x80 0xe0 0x90 0x90 0x90
: 5-pix-wide-8-1
  0x02 0x80 0x00 0x80 0x80 0x80
: 5-pix-wide-9-1
  0x04 0x20 0x00 0x20 0x20 0xc0
: 5-pix-wide-10-1
  0x05 0x80 0xb0 0xc0 0xa0 0x90
: 5-pix-wide-11-1
  0x03 0xc0 0x40 0x40 0x40 0x40
: 5-pix-wide-12-1
  0x06 0x00 0xd0 0xa8 0x88 0x88
: 5-pix-wide-13-1
  0x05 0x00 0xe0 0x90 0x90 0x90
: 5-pix-wide-14-1
  0x05 0x00 0x60 0x90 0x90 0x60
: 5-pix-wide-15-1
  0x05 0x00 0xe0 0x90 0xe0 0x80
: 5-pix-wide-16-1
  0x04 0x00 0x60 0xa0 0x60 0x20
: 5-pix-wide-17-1
  0x05 0x00 0xb0 0xc0 0x80 0x80
: 5-pix-wide-18-1
  0x05 0x00 0x70 0xc0 0x30 0xe0
: 5-pix-wide-19-1
  0x04 0x40 0xe0 0x40 0x40 0x20
: 5-pix-wide-20-1
  0x05 0x00 0x90 0x90 0x90 0x70
: 5-pix-wide-21-1
  0x05 0x00 0x90 0x90 0x90 0x60
: 5-pix-wide-22-1
  0x06 0x00 0x88 0x88 0xa8 0x50
: 5-pix-wide-23-1
  0x06 0x00 0xd8 0x70 0x70 0xd8
: 5-pix-wide-24-1
  0x05 0x00 0x90 0x70 0x10 0xe0
: 5-pix-wide-25-1
  0x05 0x00 0xf0 0x30 0xc0 0xf0
: 5-pix-wide-26-1
  0x03 0x00 0x00 0x00 0x40 0x80
: 5-pix-wide-27-1
  0x02 0x00 0x00 0x00 0x00 0x80
: 5-pix-wide-28-1
  0x04 0x20 0x20 0x40 0x80 0x80
: 5-pix-wide-29-1
  0x02 0x00 0x80 0x00 0x80 0x00
: 5-pix-wide-30-1
  0x05 0x60 0x90 0x60 0x90 0x70
: 5-pix-wide-31-1
  0x02 0x80 0x80 0x00 0x00 0x00
: 5-pix-wide-32-1
  0x03 0x00 0x00 0xc0 0x00 0x00
: 5-pix-wide-33-1
  0x02 0x80 0x80 0x80 0x00 0x80
: 5-pix-wide-34-1
  0x05 0xe0 0x10 0x60 0x00 0x40
: 5-pix-wide-35-1
  0x03 0x00 0x00 0x00 0x00 0x00



: font-4-pix-low
  4
: 4-pix-low-0-0
  0x04 0x40 0xa0 0xe0 0xa0
: 4-pix-low-1-0
  0x04 0xc0 0xe0 0xa0 0xe0
: 4-pix-low-2-0
  0x04 0x60 0x80 0x80 0x60
: 4-pix-low-3-0
  0x04 0xc0 0xa0 0xa0 0xc0
: 4-pix-low-4-0
  0x04 0xe0 0xc0 0x80 0xe0
: 4-pix-low-5-0
  0x04 0xe0 0x80 0xc0 0x80
: 4-pix-low-6-0
  0x04 0x60 0x80 0xa0 0x60
: 4-pix-low-7-0
  0x04 0xa0 0xe0 0xa0 0xa0
: 4-pix-low-8-0
  0x04 0xe0 0x40 0x40 0xe0
: 4-pix-low-9-0
  0x04 0xe0 0x20 0x20 0xc0
: 4-pix-low-10-0
  0x04 0xa0 0xc0 0xa0 0xa0
: 4-pix-low-11-0
  0x03 0x80 0x80 0x80 0xc0
: 4-pix-low-12-0
  0x06 0xd8 0xa8 0x88 0x88
: 4-pix-low-13-0
  0x05 0x90 0xd0 0xb0 0x90
: 4-pix-low-14-0
  0x04 0x40 0xa0 0xa0 0x40
: 4-pix-low-15-0
  0x04 0xc0 0xa0 0xc0 0x80
: 4-pix-low-16-0
  0x04 0x40 0xa0 0xe0 0x60
: 4-pix-low-17-0
  0x04 0xc0 0xa0 0xc0 0xa0
: 4-pix-low-18-0
  0x04 0x60 0xc0 0x20 0xc0
: 4-pix-low-19-0
  0x04 0xe0 0x40 0x40 0x40
: 4-pix-low-20-0
  0x04 0xa0 0xa0 0xa0 0x60
: 4-pix-low-21-0
  0x04 0xa0 0xa0 0xa0 0x40
: 4-pix-low-22-0
  0x06 0x88 0xa8 0xa8 0x50
: 4-pix-low-23-0
  0x04 0xa0 0x40 0xa0 0xa0
: 4-pix-low-24-0
  0x04 0xa0 0xa0 0x40 0x40
: 4-pix-low-25-0
  0x04 0xe0 0x60 0x80 0xe0
: 4-pix-low-26-0
  0x04 0xe0 0xa0 0xa0 0xe0
: 4-pix-low-27-0
  0x04 0xc0 0x40 0x40 0xe0
: 4-pix-low-28-0
  0x04 0xe0 0x20 0xc0 0xe0
: 4-pix-low-29-0
  0x04 0xe0 0x60 0x20 0xe0
: 4-pix-low-30-0
  0x04 0xa0 0xe0 0x20 0x20
: 4-pix-low-31-0
  0x04 0xe0 0xc0 0x20 0xc0
: 4-pix-low-32-0
  0x04 0x60 0x80 0xe0 0xe0
: 4-pix-low-33-0
  0x04 0xe0 0x20 0x40 0x40
: 4-pix-low-34-0
  0x04 0xe0 0xe0 0xa0 0xe0
: 4-pix-low-35-0
  0x04 0xe0 0xe0 0x20 0xc0
: 4-pix-low-0-1
  0x04 0x00 0x60 0xa0 0x60
: 4-pix-low-1-1
  0x04 0x80 0xc0 0xa0 0xc0
: 4-pix-low-2-1
  0x04 0x00 0x60 0x80 0x60
: 4-pix-low-3-1
  0x04 0x20 0x60 0xa0 0x60
: 4-pix-low-4-1
  0x04 0x00 0x60 0xc0 0x60
: 4-pix-low-5-1
  0x04 0x60 0x80 0xc0 0x80
: 4-pix-low-6-1
  0x04 0x60 0xa0 0x60 0xc0
: 4-pix-low-7-1
  0x04 0x80 0xc0 0xa0 0xa0
: 4-pix-low-8-1
  0x02 0x80 0x00 0x80 0x80
: 4-pix-low-9-1
  0x03 0x40 0x00 0x40 0x80
: 4-pix-low-10-1
  0x04 0x80 0xa0 0xc0 0xa0
: 4-pix-low-11-1
  0x03 0xc0 0x40 0x40 0x40
: 4-pix-low-12-1
  0x06 0x00 0xd0 0xa8 0x88
: 4-pix-low-13-1
  0x04 0x00 0xc0 0xa0 0xa0
: 4-pix-low-14-1
  0x04 0x00 0x40 0xa0 0x40
: 4-pix-low-15-1
  0x04 0x00 0xe0 0xe0 0x80
: 4-pix-low-16-1
  0x03 0x00 0xc0 0xc0 0x40
: 4-pix-low-17-1
  0x03 0x00 0xc0 0x80 0x80
: 4-pix-low-18-1
  0x04 0x00 0x60 0x40 0xc0
: 4-pix-low-19-1
  0x03 0x80 0xc0 0x80 0x40
: 4-pix-low-20-1
  0x04 0x00 0xa0 0xa0 0x60
: 4-pix-low-21-1
  0x04 0x00 0xa0 0xa0 0x40
: 4-pix-low-22-1
  0x06 0x00 0x88 0xa8 0x50
: 4-pix-low-23-1
  0x04 0x00 0xa0 0x40 0xa0
: 4-pix-low-24-1
  0x04 0x00 0xa0 0x40 0x80
: 4-pix-low-25-1
  0x04 0x00 0xc0 0x40 0x60
: 4-pix-low-26-1
  0x03 0x00 0x00 0x40 0x80
: 4-pix-low-27-1
  0x02 0x00 0x00 0x00 0x80
: 4-pix-low-28-1
  0x03 0x40 0x40 0x80 0x80
: 4-pix-low-29-1
  0x02 0x00 0x80 0x00 0x80
: 4-pix-low-30-1
  0x05 0xe0 0xa0 0xf0 0xe0
: 4-pix-low-31-1
  0x02 0x80 0x80 0x00 0x00
: 4-pix-low-32-1
  0x03 0x00 0x00 0xc0 0x00
: 4-pix-low-33-1
  0x02 0x80 0x80 0x00 0x80
: 4-pix-low-34-1
  0x04 0xe0 0x20 0x00 0x40
: 4-pix-low-35-1
  0x02 0x00 0x00 0x00 0x00

